name: CI/CD

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      reason:
        description: 'Why are you running manually?'
        required: true

jobs:
  install-cache:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.16.0]
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Cache npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Cache Cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/package-lock.json') }}
          restore-keys: cypress-binary-
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm install --force --non-interactive

  type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - install-cache
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Check types
        run: npm run lint:types

  eslint-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - type-check
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Lint with ESLint
        run: 'npm run lint:js'

  prettier-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - type-check
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Lint with Prettier
        run: 'npm run lint:prettier'

  stylelint-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - type-check
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Lint with Stylelint
        run: 'npm run lint:styles'

  vitest-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - eslint-lint
      - prettier-lint
      - stylelint-lint
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Run Vitest tests
        run: 'npm run vitest:run'

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - vitest-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Build Application
        run: npm run app:build

  cypress-component-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 18.16.0
    needs:
      - build
    steps:
      - name: Checkout Commit
        uses: actions/checkout@v3.5.0
      - name: 'Install Node.js ${{ matrix.node }}'
        uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - name: Restore npm dependencies
        uses: actions/cache@v3
        id: cache-dependencies
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Restore Cypress binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-binary-${{ hashFiles('**/package-lock.json') }}
          restore-keys: cypress-binary-
      - name: Run Cypress test
        uses: cypress-io/github-action@v5
        with:
          component: true
          command: npm run cypress:run

  deploy-preview:
    runs-on: ubuntu-latest
    needs:
      - cypress-component-tests
    steps:
      - uses: actions/checkout@v3.5.0
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
