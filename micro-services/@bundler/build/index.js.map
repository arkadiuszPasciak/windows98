{"version":3,"file":"index.js","sources":["../../src/ms-app-config/src/domain/domains/config.domain.ts","../../src/ms-error-handler/src/domain/domains/error-handler.domain.ts","../../src/ms-app-config/src/domain/domains/builder.domain.ts","../../src/ms-app-controller/src/data/repositories/app-controller.repository.ts","../../src/ms-app-controller/src/domain/domains/app-controller.domain.ts","../../src/ms-browser-env/src/data/repositories/browser-name.repository.ts","../../src/ms-browser-env/src/data/repositories/device-type.repository.ts","../../src/ms-browser-env/src/data/repositories/operating-system.repository.ts","../../src/ms-browser-env/src/data/repositories/screen.repository.ts","../../src/ms-browser-env/src/domain/services/browser-env.service.ts","../../src/ms-date/src/data/repositories/date.repository.ts","../../src/ms-date/src/domain/domains/date.domain.ts","../../src/ms-date/src/index.ts","../../src/ms-language/src/domain/models/attribute.model.ts","../../src/ms-language/src/domain/domains/strategies/attribute.strategy.ts","../../src/ms-language/src/domain/domains/strategies/class.strategy.ts","../../src/ms-language/src/domain/domains/language.domain.ts","../../src/ms-storage/src/data/repositories/local-storage.repository.ts","../../src/ms-storage/src/data/repositories/session-storage.repository.ts","../../src/ms-storage/src/domain/domains/storage.domain.ts","../../src/ms-storage/src/domain/domains/local-storage.domain.ts","../../src/ms-storage/src/domain/domains/session-storage.domain.ts","../../src/ms-theme/src/domain/models/attribute.model.ts","../../src/ms-theme/src/domain/domains/strategies/attribute.strategy.ts","../../src/ms-theme/src/domain/domains/strategies/class.strategy.ts","../../src/ms-theme/src/domain/domains/theme.domain.ts"],"sourcesContent":["import type { AppConfigDomainContract } from \"../contracts\"\n\nexport class AppConfigDomain<Config>\n\timplements AppConfigDomainContract<Config>\n{\n\t// biome-ignore lint/suspicious/noExplicitAny: any is used to store the instance of the class\n\tprivate static instance: AppConfigDomain<any> | undefined = undefined\n\tprivate static lock = false\n\treadonly config: Config\n\n\tprivate constructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic static getInstance<Config>(config: Config): AppConfigDomain<Config> {\n\t\twhile (AppConfigDomain.lock) {\n\t\t\t/* Busy-wait until the lock is released */\n\t\t}\n\n\t\tAppConfigDomain.lock = true\n\n\t\tif (!AppConfigDomain.instance) {\n\t\t\tAppConfigDomain.instance = new AppConfigDomain(config)\n\t\t}\n\n\t\tAppConfigDomain.lock = false\n\n\t\treturn AppConfigDomain.instance\n\t}\n\n\tpublic set<Key extends keyof Config>(key: Key, value: Config[Key]): void {\n\t\tif (this.config[key] === value) return\n\n\t\tthis.config[key] = value\n\t}\n\n\tpublic get<Key extends keyof Config>(key: Key): Config[Key] {\n\t\treturn this.config[key]\n\t}\n}\n","import type { IError } from \"../../models\"\nimport type { ErrorHandlerDomainContract } from \"../contracts\"\n\nexport class ErrorHandlerDomain implements ErrorHandlerDomainContract {\n\tprivate readonly UNKNOWN_ERROR_MESSAGE = \"Unknown error message\"\n\n\tpublic CatchError(moduleName: string, methodName: string) {\n\t\tconst instance = this\n\n\t\treturn (\n\t\t\t_target: object,\n\t\t\t_propertyKey: string,\n\t\t\tdescriptor: PropertyDescriptor,\n\t\t): void => {\n\t\t\tconst originalMethod = descriptor.value\n\n\t\t\tdescriptor.value = function (...args: unknown[]) {\n\t\t\t\ttry {\n\t\t\t\t\treturn originalMethod.apply(this, args)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconst customError = instance.createError(\n\t\t\t\t\t\tmoduleName,\n\t\t\t\t\t\tmethodName,\n\t\t\t\t\t\terror,\n\t\t\t\t\t)\n\n\t\t\t\t\tthrow customError\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createError(\n\t\tmoduleName: string,\n\t\tmethodName: string,\n\t\terror: Error | unknown,\n\t): IError {\n\t\tconst errorMessage = this.generateErrorMessage(error)\n\n\t\tconst newError = new Error(errorMessage)\n\t\tnewError.name = `[${moduleName}]<${methodName}>`\n\n\t\treturn newError\n\t}\n\n\tprivate generateErrorMessage(error: Error | unknown): string {\n\t\treturn error instanceof Error && error.message.length\n\t\t\t? error.message\n\t\t\t: this.UNKNOWN_ERROR_MESSAGE\n\t}\n}\n\nconst errorHandlerInstance = new ErrorHandlerDomain()\n\nexport const MSErrorHandler = {\n\tCatchError: errorHandlerInstance.CatchError.bind(errorHandlerInstance),\n}\n","import { MSErrorHandler } from \"../../../../ms-error-handler/src\"\nimport type { AppConfigBuilderDomainContract } from \"../contracts\"\n\nexport class AppConfigBuilderDomain<Config>\n\timplements AppConfigBuilderDomainContract<Config>\n{\n\tprivate config: Config\n\n\tconstructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic add<Key extends keyof Config>(key: Key, value: Config[Key]): this {\n\t\tthis.config[key] = value\n\n\t\treturn this\n\t}\n\n\tpublic build(): Config {\n\t\tthis.validateConfig()\n\n\t\treturn this.config\n\t}\n\n\t@MSErrorHandler.CatchError(\"AppConfigBuilderDomain\", \"validateConfig\")\n\tprivate validateConfig(): void {\n\t\tif (this.config === undefined) throw new Error(\"missing config\")\n\n\t\tfor (const [key, value] of Object.entries(\n\t\t\tthis.config as Record<string, unknown>,\n\t\t)) {\n\t\t\tif (value === undefined) throw new Error(`missing ${key}`)\n\t\t}\n\t}\n}\n","import type { AppControllerRepositoryContract } from \"../../domain/contracts\"\n\nexport class AppControllerRepository\n\timplements AppControllerRepositoryContract\n{\n\trestartApplication(): void {\n\t\twindow.location.reload()\n\t}\n\n\tshutdownApplication(): void {\n\t\twindow.location.href = \"https://google.com\"\n\t}\n}\n","import { AppControllerRepository } from \"../../data/repositories\"\nimport type {\n\tAppControllerDomainContract,\n\tAppControllerRepositoryContract,\n} from \"../contracts\"\n\nexport class AppControllerDomain implements AppControllerDomainContract {\n\tprivate appControllerRepository: AppControllerRepositoryContract\n\n\tconstructor() {\n\t\tthis.appControllerRepository = new AppControllerRepository()\n\t}\n\n\trestartApplication(): void {\n\t\tthis.appControllerRepository.restartApplication()\n\t}\n\n\tshutdownApplication(): void {\n\t\tthis.appControllerRepository.shutdownApplication()\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIBrowserNameRegex,\n\tTBrowserName,\n} from \"../../domain/models/browser.model\"\n\nexport default class BrowserNameRepository\n\timplements BrowserEnvRepositoryContract<TBrowserName>\n{\n\tconstructor(\n\t\tprivate readonly browserNames: Array<IBrowserNameRegex> = [\n\t\t\t{ name: \"Chrome\", regex: /chrome|chromium|crios/i },\n\t\t\t{ name: \"Firefox\", regex: /firefox|fxios/i },\n\t\t\t{ name: \"Safari\", regex: /safari/i },\n\t\t\t{ name: \"Opera\", regex: /opr\\//i },\n\t\t\t{ name: \"Edge\", regex: /edg/i },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.browserNames) {\n\t\t\tconst system = this.browserNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IDevicesRegex, TDevices } from \"../../domain/models/device.model\"\n\nexport default class DeviceTypeRepository\n\timplements BrowserEnvRepositoryContract<TDevices>\n{\n\tconstructor(\n\t\tprivate readonly devicesNames: Array<IDevicesRegex> = [\n\t\t\t{\n\t\t\t\tname: \"mobile\",\n\t\t\t\tregex: /iphone|ipad|ipod|android|blackberry|opera mini|iemobile/i,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"desktop\",\n\t\t\t\tregex: /Win|Windows|OpenBSD|SunOS|Linux|X11|Mac|Mac OS X/i,\n\t\t\t},\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.devicesNames) {\n\t\t\tconst system = this.devicesNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIOperatingSystemRegex,\n\tTOperatingSystemAll,\n} from \"../../domain/models/operating.model\"\n\nexport default class OperatingSystemRepository\n\timplements BrowserEnvRepositoryContract<TOperatingSystemAll>\n{\n\tconstructor(\n\t\tprivate readonly operatingSystems: Array<IOperatingSystemRegex> = [\n\t\t\t{ name: \"Windows 3.11\", regex: /Win16/ },\n\t\t\t{ name: \"Windows 95\", regex: /(Windows 95|Win95|Windows_95)/ },\n\t\t\t{ name: \"Windows ME\", regex: /(Win 9x 4.90|Windows ME)/ },\n\t\t\t{ name: \"Windows 98\", regex: /(Windows 98|Win98)/ },\n\t\t\t{ name: \"Windows CE\", regex: /Windows CE/ },\n\t\t\t{ name: \"Windows 2000\", regex: /(Windows NT 5.0|Windows 2000)/ },\n\t\t\t{ name: \"Windows XP\", regex: /(Windows NT 5.1|Windows XP)/ },\n\t\t\t{ name: \"Windows Server 2003\", regex: /Windows NT 5.2/ },\n\t\t\t{ name: \"Windows Vista\", regex: /Windows NT 6.0/ },\n\t\t\t{ name: \"Windows 7\", regex: /(Windows 7|Windows NT 6.1)/ },\n\t\t\t{ name: \"Windows 8.1\", regex: /(Windows 8.1|Windows NT 6.3)/ },\n\t\t\t{ name: \"Windows 8\", regex: /(Windows 8|Windows NT 6.2)/ },\n\t\t\t{\n\t\t\t\tname: \"Windows NT 4.0\",\n\t\t\t\tregex: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/,\n\t\t\t},\n\t\t\t{ name: \"Windows ME\", regex: /Windows ME/ },\n\t\t\t{ name: \"Android\", regex: /Android/ },\n\t\t\t{ name: \"Open BSD\", regex: /OpenBSD/ },\n\t\t\t{ name: \"Sun OS\", regex: /SunOS/ },\n\t\t\t{ name: \"Linux\", regex: /(Linux|X11)/ },\n\t\t\t{ name: \"iOS\", regex: /(iPhone|iPad|iPod)/ },\n\t\t\t{ name: \"Mac OS X\", regex: /Mac OS X/ },\n\t\t\t{ name: \"Mac OS\", regex: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n\t\t\t{ name: \"QNX\", regex: /QNX/ },\n\t\t\t{ name: \"UNIX\", regex: /UNIX/ },\n\t\t\t{ name: \"BeOS\", regex: /BeOS/ },\n\t\t\t{ name: \"OS/2\", regex: /OS\\/2/ },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.operatingSystems) {\n\t\t\tconst system = this.operatingSystems[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IScreenInformation } from \"../../domain/models/screen.model\"\n\nexport default class ScreenRepository\n\timplements BrowserEnvRepositoryContract<IScreenInformation>\n{\n\tpublic get() {\n\t\tconst windowScreen = window.screen\n\n\t\tif (!windowScreen) return null\n\n\t\treturn {\n\t\t\tcolorDepth: windowScreen.colorDepth,\n\t\t\theight: windowScreen.height,\n\t\t\twidth: windowScreen.width,\n\t\t}\n\t}\n}\n","import BrowserNameRepository from \"../../data/repositories/browser-name.repository\"\nimport DeviceTypeRepository from \"../../data/repositories/device-type.repository\"\nimport OperatingSystemRepository from \"../../data/repositories/operating-system.repository\"\nimport ScreenRepository from \"../../data/repositories/screen.repository\"\nimport type BrowserEnvServiceContract from \"../contracts/service.contract\"\n\nexport default class BrowserEnvService implements BrowserEnvServiceContract {\n\tconstructor(\n\t\tprivate readonly browserNameRepository = new BrowserNameRepository(),\n\t\tprivate readonly deviceTypeRepository = new DeviceTypeRepository(),\n\t\tprivate readonly operatingSystemRepository = new OperatingSystemRepository(),\n\t\tprivate readonly screenRepository = new ScreenRepository(),\n\t) {}\n\n\tpublic getBrowserName() {\n\t\treturn this.browserNameRepository.get()\n\t}\n\n\tpublic getDeviceType() {\n\t\treturn this.deviceTypeRepository.get()\n\t}\n\n\tpublic getOperatingSystem() {\n\t\treturn this.operatingSystemRepository.get()\n\t}\n\n\tpublic getScreenInformation() {\n\t\treturn this.screenRepository.get()\n\t}\n}\n","import { MSErrorHandler } from \"../../../../ms-error-handler/src\"\nimport type { DateRepositoryContract } from \"../../domain/contracts\"\nimport type {\n\tEDay,\n\tEMonth,\n\tIFormatOptions,\n\tTLocalesArgument,\n} from \"../../domain/models\"\n\nexport class DateRepository implements DateRepositoryContract {\n\tpublic getDate(value?: string): number {\n\t\treturn this.createDate(value).getDate()\n\t}\n\n\tpublic getDay(value?: string): EDay {\n\t\treturn this.createDate(value).getDay()\n\t}\n\n\tpublic getFullYear(value?: string): number {\n\t\treturn this.createDate(value).getFullYear()\n\t}\n\n\tpublic getHours(value?: string): number {\n\t\treturn this.createDate(value).getHours()\n\t}\n\n\tpublic getMilliseconds(value?: string): number {\n\t\treturn this.createDate(value).getMilliseconds()\n\t}\n\n\tpublic getMinutes(value?: string): number {\n\t\treturn this.createDate(value).getMinutes()\n\t}\n\n\tpublic getMonth(value?: string): EMonth {\n\t\treturn this.createDate(value).getMonth()\n\t}\n\n\tpublic getSeconds(value?: string): number {\n\t\treturn this.createDate(value).getSeconds()\n\t}\n\n\tpublic toLocaleString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.createDate(value).toLocaleString(locales, options)\n\t}\n\n\tpublic toLocaleDateString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.createDate(value).toLocaleDateString(locales, options)\n\t}\n\n\tpublic toLocaleTimeString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.createDate(value).toLocaleTimeString(locales, options)\n\t}\n\n\t@MSErrorHandler.CatchError(\"DateRepository\", \"CatchError\")\n\tprivate createDate(value?: string): Date {\n\t\tif (value && !this.isValidDate(value)) {\n\t\t\tthrow new Error(`Invalid date string: ${value}`)\n\t\t}\n\n\t\treturn value ? new Date(value) : new Date()\n\t}\n\n\tprivate isValidDate(value: string): boolean {\n\t\treturn !Number.isNaN(Date.parse(value))\n\t}\n}\n","import { DateRepository } from \"../../data/repositories\"\nimport type { DateDomainContract } from \"../contracts\"\nimport type { IFormatOptions, TLocalesArgument } from \"../models\"\n\nexport class DateDomain implements DateDomainContract {\n\tconstructor(private readonly dateRepository = new DateRepository()) {}\n\n\tpublic getDate(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateRepository.toLocaleDateString(value, locales, options)\n\t}\n\n\tpublic getDateWithTime(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateRepository.toLocaleString(value, locales, options)\n\t}\n\n\tpublic getTime(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateRepository.toLocaleTimeString(value, locales, options)\n\t}\n}\n","import { DateDomain } from \"../src/domain/domains\"\n\nexport const MSDate = new DateDomain()\n","export enum EAttributes {\n\tLANGUAGE = \"lang\",\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { LanguageStrategyContract } from \"../../contracts\"\nimport { EAttributes } from \"../../models\"\n\nexport class AttributeLanguageStrategy<ELanguages>\n\timplements LanguageStrategyContract<ELanguages>\n{\n\t@MSErrorHandler.CatchError(\"AttributeLanguageStrategy\", \"applyLanguage\")\n\tpublic applyLanguage(language: ELanguages): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\n\t\tif (element) {\n\t\t\telement.setAttribute(EAttributes.LANGUAGE, language as string)\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { LanguageStrategyContract } from \"../../contracts\"\n\nexport class ClassLanguageStrategy<ELanguages>\n\timplements LanguageStrategyContract<ELanguages>\n{\n\t@MSErrorHandler.CatchError(\"ClassLanguageStrategy\", \"applyLanguage\")\n\tpublic applyLanguage(language: ELanguages): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\t\tconst languageClassName: string = `language-${language}`\n\n\t\tif (element) {\n\t\t\telement.className = languageClassName\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type {\n\tLanguageDomainContract,\n\tLanguageStrategyContract,\n} from \"../contracts\"\nimport { AttributeLanguageStrategy } from \"./strategies\"\n\nclass LanguageDomain<ELanguages> implements LanguageDomainContract<ELanguages> {\n\tprivate languageStrategy: LanguageStrategyContract<ELanguages>\n\n\tconstructor(languageStrategy: LanguageStrategyContract<ELanguages>) {\n\t\tthis.languageStrategy = languageStrategy\n\t}\n\n\tpublic updateLanguage(language: ELanguages): void {\n\t\tthis.languageStrategy.applyLanguage(language)\n\t}\n}\n\nexport class MSLanguage<ELanguages> extends LanguageDomain<ELanguages> {\n\tconstructor() {\n\t\tsuper(new AttributeLanguageStrategy<ELanguages>())\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { StorageRepositoryStrategyContract } from \"../../domain/contracts\"\n\nexport class LocalStorageRepository<StorageKeys>\n\timplements StorageRepositoryStrategyContract<StorageKeys>\n{\n\tpublic getItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t): Maybe<StorageKeys[Key]> {\n\t\treturn window.localStorage.getItem(key as string) as StorageKeys[Key]\n\t}\n\n\tpublic setItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\twindow.localStorage.setItem(key as string, value as string)\n\t}\n\n\tpublic removeItem<Key extends keyof StorageKeys>(key: Key): void {\n\t\twindow.localStorage.removeItem(key as string)\n\t}\n\n\tpublic clear(): void {\n\t\twindow.localStorage.clear()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { StorageRepositoryStrategyContract } from \"../../domain/contracts\"\n\nexport class SessionStorageRepository<StorageKeys>\n\timplements StorageRepositoryStrategyContract<StorageKeys>\n{\n\tpublic getItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t): Maybe<StorageKeys[Key]> {\n\t\treturn window.sessionStorage.getItem(key as string) as StorageKeys[Key]\n\t}\n\n\tpublic setItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\twindow.sessionStorage.setItem(key as string, value as string)\n\t}\n\n\tpublic removeItem<Key extends keyof StorageKeys>(key: Key): void {\n\t\twindow.sessionStorage.removeItem(key as string)\n\t}\n\n\tpublic clear(): void {\n\t\twindow.sessionStorage.clear()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type {\n\tStorageDomainContract,\n\tStorageRepositoryStrategyContract,\n} from \"../contracts\"\n\nexport class StorageDomain<StorageKeys>\n\timplements StorageDomainContract<StorageKeys>\n{\n\tprivate storageRepository: StorageRepositoryStrategyContract<StorageKeys>\n\n\tconstructor(\n\t\tstorageRepository: StorageRepositoryStrategyContract<StorageKeys>,\n\t) {\n\t\tthis.storageRepository = storageRepository\n\t}\n\n\tpublic set<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\tthis.storageRepository.setItem(key, value)\n\t}\n\n\tpublic get<Key extends keyof StorageKeys>(key: Key): Maybe<StorageKeys[Key]> {\n\t\treturn this.storageRepository.getItem(key) as Maybe<StorageKeys[Key]>\n\t}\n\n\tpublic exists<Key extends keyof StorageKeys>(key: Key): boolean {\n\t\tconst item = this.get(key)\n\n\t\treturn !!item?.toString().length\n\t}\n\n\tpublic remove<Key extends keyof StorageKeys>(key: Key): void {\n\t\tthis.storageRepository.removeItem(key)\n\t}\n}\n","import { LocalStorageRepository } from \"../../data/repositories\"\nimport { StorageDomain } from \"./storage.domain\"\n\nexport class MSLocalStorage<StorageKeys> extends StorageDomain<StorageKeys> {\n\tconstructor() {\n\t\tsuper(new LocalStorageRepository<StorageKeys>())\n\t}\n}\n","import { SessionStorageRepository } from \"../../data/repositories\"\nimport { StorageDomain } from \"./storage.domain\"\n\nexport class MSSessionStorage<StorageKeys> extends StorageDomain<StorageKeys> {\n\tconstructor() {\n\t\tsuper(new SessionStorageRepository<StorageKeys>())\n\t}\n}\n","export enum EAttributes {\n\tTHEME = \"theme\",\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { ThemeStrategyContract } from \"../../contracts\"\nimport { EAttributes } from \"../../models\"\n\nexport class AttributeThemeStrategy<EThemes>\n\timplements ThemeStrategyContract<EThemes>\n{\n\t@MSErrorHandler.CatchError(\"AttributeThemeStrategy\", \"applyTheme\")\n\tpublic applyTheme(theme: EThemes): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\n\t\tif (element) {\n\t\t\telement.setAttribute(EAttributes.THEME, theme as string)\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { ThemeStrategyContract } from \"../../contracts\"\n\nexport class ClassThemeStrategy<EThemes>\n\timplements ThemeStrategyContract<EThemes>\n{\n\t@MSErrorHandler.CatchError(\"ClassThemeStrategy\", \"applyTheme\")\n\tpublic applyTheme(theme: EThemes): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\t\tconst themeClassName: string = `theme-${theme}`\n\n\t\tif (element) {\n\t\t\telement.className = themeClassName\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { ThemeDomainContract, ThemeStrategyContract } from \"../contracts\"\nimport { AttributeThemeStrategy } from \"./strategies\"\n\nclass ThemeDomain<EThemes> implements ThemeDomainContract<EThemes> {\n\tprivate themeStrategy: ThemeStrategyContract<EThemes>\n\n\tconstructor(themeStrategy: ThemeStrategyContract<EThemes>) {\n\t\tthis.themeStrategy = themeStrategy\n\t}\n\n\tpublic updateTheme(theme: EThemes): void {\n\t\tthis.themeStrategy.applyTheme(theme)\n\t}\n}\n\nexport class MSTheme<EThemes> extends ThemeDomain<EThemes> {\n\tconstructor() {\n\t\tsuper(new AttributeThemeStrategy<EThemes>())\n\t}\n}\n"],"names":["_AppConfigDomain","config","__publicField","key","value","AppConfigDomain","ErrorHandlerDomain","moduleName","methodName","instance","_target","_propertyKey","descriptor","originalMethod","args","error","errorMessage","newError","errorHandlerInstance","MSErrorHandler","AppConfigBuilderDomain","__decorateClass","AppControllerRepository","AppControllerDomain","BrowserNameRepository","browserNames","userAgent","id","system","DeviceTypeRepository","devicesNames","OperatingSystemRepository","operatingSystems","ScreenRepository","windowScreen","BrowserEnvService","browserNameRepository","deviceTypeRepository","operatingSystemRepository","screenRepository","DateRepository","locales","options","DateDomain","dateRepository","MSDate","EAttributes","AttributeLanguageStrategy","language","element","ClassLanguageStrategy","languageClassName","LanguageDomain","languageStrategy","MSLanguage","LocalStorageRepository","SessionStorageRepository","StorageDomain","storageRepository","item","MSLocalStorage","MSSessionStorage","AttributeThemeStrategy","theme","ClassThemeStrategy","themeClassName","ThemeDomain","themeStrategy","MSTheme"],"mappings":"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"}