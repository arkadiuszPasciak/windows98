{"version":3,"file":"index.js","sources":["../../src/ms-app-controller/src/data/repositories/app-controller.repository.ts","../../src/ms-app-controller/src/domain/domains/app-controller.domain.ts","../../src/ms-browser-env/src/data/repositories/browser-name.repository.ts","../../src/ms-browser-env/src/data/repositories/device-type.repository.ts","../../src/ms-browser-env/src/data/repositories/operating-system.repository.ts","../../src/ms-browser-env/src/data/repositories/screen.repository.ts","../../src/ms-browser-env/src/domain/services/browser-env.service.ts","../../src/ms-database/src/data/repositories/database.repository.ts","../../src/ms-database/src/domain/services/database.service.ts"],"sourcesContent":["import type { AppControllerRepositoryContract } from \"../../domain/contracts\"\n\nexport class AppControllerRepository\n\timplements AppControllerRepositoryContract\n{\n\trestartApplication(): void {\n\t\twindow.location.reload()\n\t}\n\n\tturnOffApplication(): void {\n\t\twindow.location.href = \"https://google.com\"\n\t}\n}\n","import { AppControllerRepository } from \"../../data/repositories\"\nimport type {\n\tAppControllerDomainContract,\n\tAppControllerRepositoryContract,\n} from \"../contracts\"\n\nexport class AppControllerDomain implements AppControllerDomainContract {\n\tprivate appControllerRepository: AppControllerRepositoryContract\n\n\tconstructor() {\n\t\tthis.appControllerRepository = new AppControllerRepository()\n\t}\n\n\trestartApplication(): void {\n\t\tthis.appControllerRepository.restartApplication()\n\t}\n\n\tturnOffApplication(): void {\n\t\tthis.appControllerRepository.turnOffApplication()\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIBrowserNameRegex,\n\tTBrowserName,\n} from \"../../domain/models/browser.model\"\n\nexport default class BrowserNameRepository\n\timplements BrowserEnvRepositoryContract<TBrowserName>\n{\n\tconstructor(\n\t\tprivate readonly browserNames: Array<IBrowserNameRegex> = [\n\t\t\t{ name: \"Chrome\", regex: /chrome|chromium|crios/i },\n\t\t\t{ name: \"Firefox\", regex: /firefox|fxios/i },\n\t\t\t{ name: \"Safari\", regex: /safari/i },\n\t\t\t{ name: \"Opera\", regex: /opr\\//i },\n\t\t\t{ name: \"Edge\", regex: /edg/i },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.browserNames) {\n\t\t\tconst system = this.browserNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IDevicesRegex, TDevices } from \"../../domain/models/device.model\"\n\nexport default class DeviceTypeRepository\n\timplements BrowserEnvRepositoryContract<TDevices>\n{\n\tconstructor(\n\t\tprivate readonly devicesNames: Array<IDevicesRegex> = [\n\t\t\t{\n\t\t\t\tname: \"mobile\",\n\t\t\t\tregex: /iphone|ipad|ipod|android|blackberry|opera mini|iemobile/i,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"desktop\",\n\t\t\t\tregex: /Win|Windows|OpenBSD|SunOS|Linux|X11|Mac|Mac OS X/i,\n\t\t\t},\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.devicesNames) {\n\t\t\tconst system = this.devicesNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIOperatingSystemRegex,\n\tTOperatingSystemAll,\n} from \"../../domain/models/operating.model\"\n\nexport default class OperatingSystemRepository\n\timplements BrowserEnvRepositoryContract<TOperatingSystemAll>\n{\n\tconstructor(\n\t\tprivate readonly operatingSystems: Array<IOperatingSystemRegex> = [\n\t\t\t{ name: \"Windows 3.11\", regex: /Win16/ },\n\t\t\t{ name: \"Windows 95\", regex: /(Windows 95|Win95|Windows_95)/ },\n\t\t\t{ name: \"Windows ME\", regex: /(Win 9x 4.90|Windows ME)/ },\n\t\t\t{ name: \"Windows 98\", regex: /(Windows 98|Win98)/ },\n\t\t\t{ name: \"Windows CE\", regex: /Windows CE/ },\n\t\t\t{ name: \"Windows 2000\", regex: /(Windows NT 5.0|Windows 2000)/ },\n\t\t\t{ name: \"Windows XP\", regex: /(Windows NT 5.1|Windows XP)/ },\n\t\t\t{ name: \"Windows Server 2003\", regex: /Windows NT 5.2/ },\n\t\t\t{ name: \"Windows Vista\", regex: /Windows NT 6.0/ },\n\t\t\t{ name: \"Windows 7\", regex: /(Windows 7|Windows NT 6.1)/ },\n\t\t\t{ name: \"Windows 8.1\", regex: /(Windows 8.1|Windows NT 6.3)/ },\n\t\t\t{ name: \"Windows 8\", regex: /(Windows 8|Windows NT 6.2)/ },\n\t\t\t{\n\t\t\t\tname: \"Windows NT 4.0\",\n\t\t\t\tregex: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/,\n\t\t\t},\n\t\t\t{ name: \"Windows ME\", regex: /Windows ME/ },\n\t\t\t{ name: \"Android\", regex: /Android/ },\n\t\t\t{ name: \"Open BSD\", regex: /OpenBSD/ },\n\t\t\t{ name: \"Sun OS\", regex: /SunOS/ },\n\t\t\t{ name: \"Linux\", regex: /(Linux|X11)/ },\n\t\t\t{ name: \"iOS\", regex: /(iPhone|iPad|iPod)/ },\n\t\t\t{ name: \"Mac OS X\", regex: /Mac OS X/ },\n\t\t\t{ name: \"Mac OS\", regex: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n\t\t\t{ name: \"QNX\", regex: /QNX/ },\n\t\t\t{ name: \"UNIX\", regex: /UNIX/ },\n\t\t\t{ name: \"BeOS\", regex: /BeOS/ },\n\t\t\t{ name: \"OS/2\", regex: /OS\\/2/ },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.operatingSystems) {\n\t\t\tconst system = this.operatingSystems[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IScreenInformation } from \"../../domain/models/screen.model\"\n\nexport default class ScreenRepository\n\timplements BrowserEnvRepositoryContract<IScreenInformation>\n{\n\tpublic get() {\n\t\tconst windowScreen = window.screen\n\n\t\tif (!windowScreen) return null\n\n\t\treturn {\n\t\t\tcolorDepth: windowScreen.colorDepth,\n\t\t\theight: windowScreen.height,\n\t\t\twidth: windowScreen.width,\n\t\t}\n\t}\n}\n","import BrowserNameRepository from \"../../data/repositories/browser-name.repository\"\nimport DeviceTypeRepository from \"../../data/repositories/device-type.repository\"\nimport OperatingSystemRepository from \"../../data/repositories/operating-system.repository\"\nimport ScreenRepository from \"../../data/repositories/screen.repository\"\nimport type BrowserEnvServiceContract from \"../contracts/service.contract\"\n\nexport default class BrowserEnvService implements BrowserEnvServiceContract {\n\tconstructor(\n\t\tprivate readonly browserNameRepository = new BrowserNameRepository(),\n\t\tprivate readonly deviceTypeRepository = new DeviceTypeRepository(),\n\t\tprivate readonly operatingSystemRepository = new OperatingSystemRepository(),\n\t\tprivate readonly screenRepository = new ScreenRepository(),\n\t) {}\n\n\tpublic getBrowserName() {\n\t\treturn this.browserNameRepository.get()\n\t}\n\n\tpublic getDeviceType() {\n\t\treturn this.deviceTypeRepository.get()\n\t}\n\n\tpublic getOperatingSystem() {\n\t\treturn this.operatingSystemRepository.get()\n\t}\n\n\tpublic getScreenInformation() {\n\t\treturn this.screenRepository.get()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { DatabaseRepositoryContract } from \"../../domain/contracts/repository.contract\"\n\nexport class DatabaseRepository implements DatabaseRepositoryContract {\n\tprivate database: Maybe<IDBDatabase> = null\n\n\tconstructor(\n\t\tprivate databaseName: string,\n\t\tprivate storeName: string,\n\t) {}\n\n\tpublic async open(): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst request = window.indexedDB.open(this.databaseName)\n\n\t\t\trequest.onerror = () => reject(request.error)\n\t\t\trequest.onsuccess = () => {\n\t\t\t\tthis.database = request.result\n\t\t\t\tresolve()\n\t\t\t}\n\t\t\trequest.onupgradeneeded = (event) => {\n\t\t\t\tthis.database = (event.target as IDBOpenDBRequest).result\n\t\t\t\tthis.database.createObjectStore(this.storeName)\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic async add<T>(item: T): Promise<void> {\n\t\tthis.getStore(\"readwrite\").add(item)\n\t}\n\n\tpublic async get<T>(key: IDBValidKey): Promise<IDBRequest<T>> {\n\t\treturn this.getStore(\"readonly\").get(key)\n\t}\n\n\tpublic async update<T>(key: IDBValidKey, item: T): Promise<void> {\n\t\tthis.getStore(\"readwrite\").put(item, key)\n\t}\n\n\tpublic async delete(key: IDBValidKey): Promise<void> {\n\t\tthis.getStore(\"readwrite\").delete(key)\n\t}\n\n\tprivate getStore(mode: IDBTransactionMode): IDBObjectStore {\n\t\tif (!this.database) {\n\t\t\tthrow new Error(\"Database not open\")\n\t\t}\n\n\t\tconst transaction: IDBTransaction = this.database.transaction(\n\t\t\tthis.storeName,\n\t\t\tmode,\n\t\t)\n\t\treturn transaction.objectStore(this.storeName)\n\t}\n}\n","import { DatabaseRepository } from \"../../data/repositories/database.repository\"\nimport type { DatabaseServiceContract } from \"../contracts/service.contract\"\n\nexport default class DatabaseService implements DatabaseServiceContract {\n\tpublic readonly databaseRepository: DatabaseRepository\n\n\tconstructor(\n\t\tpublic readonly databaseName: string,\n\t\tpublic readonly storeName: string,\n\t) {\n\t\tthis.databaseRepository = new DatabaseRepository(\n\t\t\tthis.databaseName,\n\t\t\tthis.storeName,\n\t\t)\n\t}\n\n\tasync open(): Promise<void> {\n\t\treturn this.databaseRepository.open()\n\t}\n\n\tpublic async add<T>(item: T): Promise<void> {\n\t\treturn this.databaseRepository.add(item)\n\t}\n\n\tpublic async get<T>(key: IDBValidKey): Promise<IDBRequest<T>> {\n\t\treturn this.databaseRepository.get(key)\n\t}\n\n\tpublic async update<T>(key: IDBValidKey, item: T): Promise<void> {\n\t\treturn this.databaseRepository.update(key, item)\n\t}\n\n\tpublic async delete(key: IDBValidKey): Promise<void> {\n\t\treturn this.databaseRepository.delete(key)\n\t}\n}\n"],"names":["AppControllerRepository","AppControllerDomain","__publicField","BrowserNameRepository","browserNames","userAgent","id","system","DeviceTypeRepository","devicesNames","OperatingSystemRepository","operatingSystems","ScreenRepository","windowScreen","BrowserEnvService","browserNameRepository","deviceTypeRepository","operatingSystemRepository","screenRepository","DatabaseRepository","databaseName","storeName","resolve","reject","request","event","item","key","mode","DatabaseService"],"mappings":"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"}