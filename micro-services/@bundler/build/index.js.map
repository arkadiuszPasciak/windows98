{"version":3,"file":"index.js","sources":["../../src/ms-app-config/src/domain/domains/config.domain.ts","../../src/ms-error-handler/src/domain/domains/error-handler.domain.ts","../../src/ms-app-config/src/domain/domains/builder.domain.ts","../../src/ms-app-controller/src/data/repositories/app-controller.repository.ts","../../src/ms-app-controller/src/domain/domains/app-controller.domain.ts","../../src/ms-browser-env/src/data/repositories/browser-name.repository.ts","../../src/ms-browser-env/src/data/repositories/device-type.repository.ts","../../src/ms-browser-env/src/data/repositories/operating-system.repository.ts","../../src/ms-browser-env/src/data/repositories/screen.repository.ts","../../src/ms-browser-env/src/domain/services/browser-env.service.ts","../../src/ms-storage/src/data/repositories/storage.repository.ts","../../src/ms-storage/src/domain/domains/storage.domain.ts","../../src/ms-theme/src/domain/models/attribute.model.ts","../../src/ms-theme/src/domain/models/storage.model.ts","../../src/ms-theme/src/domain/models/theme.model.ts","../../src/ms-theme/src/domain/domains/theme.domain.ts"],"sourcesContent":["import type { AppConfigDomainContract } from \"../contracts\"\n\nexport class AppConfigDomain<Config>\n\timplements AppConfigDomainContract<Config>\n{\n\t// biome-ignore lint/suspicious/noExplicitAny: any is used to store the instance of the class\n\tprivate static instance: AppConfigDomain<any> | undefined = undefined\n\tprivate static lock = false\n\treadonly config: Config\n\n\tprivate constructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic static getInstance<Config>(config: Config): AppConfigDomain<Config> {\n\t\twhile (AppConfigDomain.lock) {\n\t\t\t/* Busy-wait until the lock is released */\n\t\t}\n\n\t\tAppConfigDomain.lock = true\n\n\t\tif (!AppConfigDomain.instance) {\n\t\t\tAppConfigDomain.instance = new AppConfigDomain(config)\n\t\t}\n\n\t\tAppConfigDomain.lock = false\n\n\t\treturn AppConfigDomain.instance\n\t}\n\n\tpublic set<Key extends keyof Config>(key: Key, value: Config[Key]): void {\n\t\tif (this.config[key] === value) return\n\n\t\tthis.config[key] = value\n\t}\n\n\tpublic get<Key extends keyof Config>(key: Key): Config[Key] {\n\t\treturn this.config[key]\n\t}\n}\n","import type { IError } from \"../../models\"\nimport type { ErrorHandlerDomainContract } from \"../contracts\"\n\nexport class ErrorHandlerDomain implements ErrorHandlerDomainContract {\n\tprivate readonly UNKNOWN_ERROR_MESSAGE = \"Unknown error message\"\n\n\tpublic CatchError(moduleName: string, methodName: string) {\n\t\tconst instance = this\n\n\t\treturn (\n\t\t\t_target: object,\n\t\t\t_propertyKey: string,\n\t\t\tdescriptor: PropertyDescriptor,\n\t\t): void => {\n\t\t\tconst originalMethod = descriptor.value\n\n\t\t\tdescriptor.value = function (...args: unknown[]) {\n\t\t\t\ttry {\n\t\t\t\t\treturn originalMethod.apply(this, args)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconst customError = instance.createError(\n\t\t\t\t\t\tmoduleName,\n\t\t\t\t\t\tmethodName,\n\t\t\t\t\t\terror,\n\t\t\t\t\t)\n\n\t\t\t\t\tthrow customError\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createError(\n\t\tmoduleName: string,\n\t\tmethodName: string,\n\t\terror: Error | unknown,\n\t): IError {\n\t\tconst errorMessage = this.generateErrorMessage(error)\n\n\t\tconst newError = new Error(errorMessage)\n\t\tnewError.name = `[${moduleName}]<${methodName}>`\n\n\t\treturn newError\n\t}\n\n\tprivate generateErrorMessage(error: Error | unknown): string {\n\t\treturn error instanceof Error && error.message.length\n\t\t\t? error.message\n\t\t\t: this.UNKNOWN_ERROR_MESSAGE\n\t}\n}\n\nconst errorHandlerInstance = new ErrorHandlerDomain()\n\nexport const MSErrorHandler = {\n\tCatchError: errorHandlerInstance.CatchError.bind(errorHandlerInstance),\n}\n","import { MSErrorHandler } from \"../../../../ms-error-handler/src\"\nimport type { AppConfigBuilderDomainContract } from \"../contracts\"\n\nexport class AppConfigBuilderDomain<Config>\n\timplements AppConfigBuilderDomainContract<Config>\n{\n\tprivate config: Config\n\n\tconstructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic add<Key extends keyof Config>(key: Key, value: Config[Key]): this {\n\t\tthis.config[key] = value\n\n\t\treturn this\n\t}\n\n\tpublic build(): Config {\n\t\tthis.validateConfig()\n\n\t\treturn this.config\n\t}\n\n\t@MSErrorHandler.CatchError(\"AppConfigBuilderDomain\", \"validateConfig\")\n\tprivate validateConfig(): void {\n\t\tif (this.config === undefined) throw new Error(\"missing config\")\n\n\t\tfor (const [key, value] of Object.entries(\n\t\t\tthis.config as Record<string, unknown>,\n\t\t)) {\n\t\t\tif (value === undefined) throw new Error(`missing ${key}`)\n\t\t}\n\t}\n}\n","import type { AppControllerRepositoryContract } from \"../../domain/contracts\"\n\nexport class AppControllerRepository\n\timplements AppControllerRepositoryContract\n{\n\trestartApplication(): void {\n\t\twindow.location.reload()\n\t}\n\n\tshutdownApplication(): void {\n\t\twindow.location.href = \"https://google.com\"\n\t}\n}\n","import { AppControllerRepository } from \"../../data/repositories\"\nimport type {\n\tAppControllerDomainContract,\n\tAppControllerRepositoryContract,\n} from \"../contracts\"\n\nexport class AppControllerDomain implements AppControllerDomainContract {\n\tprivate appControllerRepository: AppControllerRepositoryContract\n\n\tconstructor() {\n\t\tthis.appControllerRepository = new AppControllerRepository()\n\t}\n\n\trestartApplication(): void {\n\t\tthis.appControllerRepository.restartApplication()\n\t}\n\n\tshutdownApplication(): void {\n\t\tthis.appControllerRepository.shutdownApplication()\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIBrowserNameRegex,\n\tTBrowserName,\n} from \"../../domain/models/browser.model\"\n\nexport default class BrowserNameRepository\n\timplements BrowserEnvRepositoryContract<TBrowserName>\n{\n\tconstructor(\n\t\tprivate readonly browserNames: Array<IBrowserNameRegex> = [\n\t\t\t{ name: \"Chrome\", regex: /chrome|chromium|crios/i },\n\t\t\t{ name: \"Firefox\", regex: /firefox|fxios/i },\n\t\t\t{ name: \"Safari\", regex: /safari/i },\n\t\t\t{ name: \"Opera\", regex: /opr\\//i },\n\t\t\t{ name: \"Edge\", regex: /edg/i },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.browserNames) {\n\t\t\tconst system = this.browserNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IDevicesRegex, TDevices } from \"../../domain/models/device.model\"\n\nexport default class DeviceTypeRepository\n\timplements BrowserEnvRepositoryContract<TDevices>\n{\n\tconstructor(\n\t\tprivate readonly devicesNames: Array<IDevicesRegex> = [\n\t\t\t{\n\t\t\t\tname: \"mobile\",\n\t\t\t\tregex: /iphone|ipad|ipod|android|blackberry|opera mini|iemobile/i,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"desktop\",\n\t\t\t\tregex: /Win|Windows|OpenBSD|SunOS|Linux|X11|Mac|Mac OS X/i,\n\t\t\t},\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.devicesNames) {\n\t\t\tconst system = this.devicesNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIOperatingSystemRegex,\n\tTOperatingSystemAll,\n} from \"../../domain/models/operating.model\"\n\nexport default class OperatingSystemRepository\n\timplements BrowserEnvRepositoryContract<TOperatingSystemAll>\n{\n\tconstructor(\n\t\tprivate readonly operatingSystems: Array<IOperatingSystemRegex> = [\n\t\t\t{ name: \"Windows 3.11\", regex: /Win16/ },\n\t\t\t{ name: \"Windows 95\", regex: /(Windows 95|Win95|Windows_95)/ },\n\t\t\t{ name: \"Windows ME\", regex: /(Win 9x 4.90|Windows ME)/ },\n\t\t\t{ name: \"Windows 98\", regex: /(Windows 98|Win98)/ },\n\t\t\t{ name: \"Windows CE\", regex: /Windows CE/ },\n\t\t\t{ name: \"Windows 2000\", regex: /(Windows NT 5.0|Windows 2000)/ },\n\t\t\t{ name: \"Windows XP\", regex: /(Windows NT 5.1|Windows XP)/ },\n\t\t\t{ name: \"Windows Server 2003\", regex: /Windows NT 5.2/ },\n\t\t\t{ name: \"Windows Vista\", regex: /Windows NT 6.0/ },\n\t\t\t{ name: \"Windows 7\", regex: /(Windows 7|Windows NT 6.1)/ },\n\t\t\t{ name: \"Windows 8.1\", regex: /(Windows 8.1|Windows NT 6.3)/ },\n\t\t\t{ name: \"Windows 8\", regex: /(Windows 8|Windows NT 6.2)/ },\n\t\t\t{\n\t\t\t\tname: \"Windows NT 4.0\",\n\t\t\t\tregex: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/,\n\t\t\t},\n\t\t\t{ name: \"Windows ME\", regex: /Windows ME/ },\n\t\t\t{ name: \"Android\", regex: /Android/ },\n\t\t\t{ name: \"Open BSD\", regex: /OpenBSD/ },\n\t\t\t{ name: \"Sun OS\", regex: /SunOS/ },\n\t\t\t{ name: \"Linux\", regex: /(Linux|X11)/ },\n\t\t\t{ name: \"iOS\", regex: /(iPhone|iPad|iPod)/ },\n\t\t\t{ name: \"Mac OS X\", regex: /Mac OS X/ },\n\t\t\t{ name: \"Mac OS\", regex: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n\t\t\t{ name: \"QNX\", regex: /QNX/ },\n\t\t\t{ name: \"UNIX\", regex: /UNIX/ },\n\t\t\t{ name: \"BeOS\", regex: /BeOS/ },\n\t\t\t{ name: \"OS/2\", regex: /OS\\/2/ },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.operatingSystems) {\n\t\t\tconst system = this.operatingSystems[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IScreenInformation } from \"../../domain/models/screen.model\"\n\nexport default class ScreenRepository\n\timplements BrowserEnvRepositoryContract<IScreenInformation>\n{\n\tpublic get() {\n\t\tconst windowScreen = window.screen\n\n\t\tif (!windowScreen) return null\n\n\t\treturn {\n\t\t\tcolorDepth: windowScreen.colorDepth,\n\t\t\theight: windowScreen.height,\n\t\t\twidth: windowScreen.width,\n\t\t}\n\t}\n}\n","import BrowserNameRepository from \"../../data/repositories/browser-name.repository\"\nimport DeviceTypeRepository from \"../../data/repositories/device-type.repository\"\nimport OperatingSystemRepository from \"../../data/repositories/operating-system.repository\"\nimport ScreenRepository from \"../../data/repositories/screen.repository\"\nimport type BrowserEnvServiceContract from \"../contracts/service.contract\"\n\nexport default class BrowserEnvService implements BrowserEnvServiceContract {\n\tconstructor(\n\t\tprivate readonly browserNameRepository = new BrowserNameRepository(),\n\t\tprivate readonly deviceTypeRepository = new DeviceTypeRepository(),\n\t\tprivate readonly operatingSystemRepository = new OperatingSystemRepository(),\n\t\tprivate readonly screenRepository = new ScreenRepository(),\n\t) {}\n\n\tpublic getBrowserName() {\n\t\treturn this.browserNameRepository.get()\n\t}\n\n\tpublic getDeviceType() {\n\t\treturn this.deviceTypeRepository.get()\n\t}\n\n\tpublic getOperatingSystem() {\n\t\treturn this.operatingSystemRepository.get()\n\t}\n\n\tpublic getScreenInformation() {\n\t\treturn this.screenRepository.get()\n\t}\n}\n","import type { StorageRepositoryContract } from \"../../domain/contracts\"\n\nexport class StorageRepository<Key extends string, Value extends string>\n\timplements StorageRepositoryContract<Key, Value>\n{\n\tpublic addItem(key: Key, value: Value): void {\n\t\twindow.localStorage.setItem(key, value)\n\t}\n\n\tpublic getItem(key: Key): string | null {\n\t\treturn window.localStorage.getItem(key)\n\t}\n\n\tpublic isItemExist(key: Key): boolean {\n\t\tconst item = this.getItem(key)\n\n\t\treturn !!item?.length\n\t}\n\n\tpublic removeItem(key: Key): void {\n\t\twindow.localStorage.removeItem(key)\n\t}\n\n\tpublic clearAll(): void {\n\t\twindow.localStorage.clear()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { StorageRepository } from \"../../data/repositories\"\nimport type { StorageDomainContract } from \"../contracts\"\n\nexport class StorageDomain<Key extends string, Value extends string>\n\timplements StorageDomainContract<Key, Value>\n{\n\tprivate readonly storageRepository: StorageRepository<Key, Value>\n\n\tconstructor() {\n\t\tthis.storageRepository = new StorageRepository()\n\t}\n\n\tpublic addItem(key: Key, value: Value): void {\n\t\tthis.storageRepository.addItem(key, value)\n\t}\n\n\tpublic getItem(key: Key): Maybe<Value> {\n\t\treturn this.storageRepository.getItem(key) as Value\n\t}\n\n\tpublic isItemExist(key: Key): boolean {\n\t\treturn this.storageRepository.isItemExist(key)\n\t}\n\n\tpublic updateItem(key: Key, value: Value): void {\n\t\tthis.storageRepository.addItem(key, value)\n\t}\n\n\tpublic removeItem(key: Key): void {\n\t\tthis.storageRepository.removeItem(key)\n\t}\n}\n","export enum EAttributes {\n\tTHEME = \"theme\",\n}\n","export enum EStorageKeys {\n\tTHEME = \"theme\",\n}\n","export enum EThemes {\n\tDARK = \"dark\",\n\tLIGHT = \"light\",\n}\n","import { MSStorage } from \"../../../../index\"\nimport type { ThemeDomainContract } from \"../contracts\"\nimport { EAttributes, EStorageKeys, EThemes } from \"../models\"\n\nexport class ThemeDomain implements ThemeDomainContract {\n\tprivate storage = new MSStorage<EStorageKeys, EThemes>()\n\tprivate defaultTheme: EThemes = EThemes.LIGHT\n\n\tpublic getThemeColor(): EThemes {\n\t\tconst theme = this.storage.getItem(EStorageKeys.THEME)\n\n\t\treturn theme ?? this.defaultTheme\n\t}\n\n\tpublic setThemeColor(theme: EThemes): void {\n\t\tthis.storage.updateItem(EStorageKeys.THEME, theme)\n\t}\n\n\tpublic updateTheme(theme: EThemes): void {\n\t\tconst element = window.document.querySelector(\"html\")\n\t\tif (!element) return\n\n\t\tconst currentTheme = element.getAttribute(EAttributes.THEME)\n\t\tif (currentTheme === theme) return\n\n\t\telement.setAttribute(EAttributes.THEME, theme)\n\t}\n\n\tpublic mountThemeColor(): void {\n\t\tconst isExist = this.storage.isItemExist(EStorageKeys.THEME)\n\n\t\tif (!isExist) {\n\t\t\tthis.initDefaultTheme()\n\n\t\t\treturn\n\t\t}\n\n\t\tconst theme = this.storage.getItem(EStorageKeys.THEME)\n\t\tif (!theme) return\n\n\t\tthis.updateTheme(theme)\n\t}\n\n\tprivate initDefaultTheme(): void {\n\t\tthis.updateTheme(this.defaultTheme)\n\t\tthis.setThemeColor(this.defaultTheme)\n\t}\n}\n"],"names":["_AppConfigDomain","config","__publicField","key","value","AppConfigDomain","ErrorHandlerDomain","moduleName","methodName","instance","_target","_propertyKey","descriptor","originalMethod","args","error","errorMessage","newError","errorHandlerInstance","MSErrorHandler","AppConfigBuilderDomain","__decorateClass","AppControllerRepository","AppControllerDomain","BrowserNameRepository","browserNames","userAgent","id","system","DeviceTypeRepository","devicesNames","OperatingSystemRepository","operatingSystems","ScreenRepository","windowScreen","BrowserEnvService","browserNameRepository","deviceTypeRepository","operatingSystemRepository","screenRepository","StorageRepository","item","StorageDomain","EAttributes","EStorageKeys","EThemes","ThemeDomain","MSStorage","theme","element"],"mappings":"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"}