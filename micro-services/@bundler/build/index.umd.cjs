(function(t,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(t=typeof globalThis<"u"?globalThis:t||self,r(t["micro-services"]={}))})(this,function(t){"use strict";var h=Object.defineProperty;var x=(t,r,s)=>r in t?h(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s;var a=(t,r,s)=>(x(t,typeof r!="symbol"?r+"":r,s),s);class r{restartApplication(){window.location.reload()}shutdownApplication(){window.location.href="https://google.com"}}class s{constructor(){a(this,"appControllerRepository");this.appControllerRepository=new r}restartApplication(){this.appControllerRepository.restartApplication()}shutdownApplication(){this.appControllerRepository.shutdownApplication()}}class d{constructor(e=[{name:"Chrome",regex:/chrome|chromium|crios/i},{name:"Firefox",regex:/firefox|fxios/i},{name:"Safari",regex:/safari/i},{name:"Opera",regex:/opr\//i},{name:"Edge",regex:/edg/i}]){this.browserNames=e}get(){const e=window.navigator.userAgent;if(!e)return null;for(const o in this.browserNames){const n=this.browserNames[o];if(n.regex.test(e))return n.name}return null}}class g{constructor(e=[{name:"mobile",regex:/iphone|ipad|ipod|android|blackberry|opera mini|iemobile/i},{name:"desktop",regex:/Win|Windows|OpenBSD|SunOS|Linux|X11|Mac|Mac OS X/i}]){this.devicesNames=e}get(){const e=window.navigator.userAgent;if(!e)return null;for(const o in this.devicesNames){const n=this.devicesNames[o];if(n.regex.test(e))return n.name}return null}}class m{constructor(e=[{name:"Windows 3.11",regex:/Win16/},{name:"Windows 95",regex:/(Windows 95|Win95|Windows_95)/},{name:"Windows ME",regex:/(Win 9x 4.90|Windows ME)/},{name:"Windows 98",regex:/(Windows 98|Win98)/},{name:"Windows CE",regex:/Windows CE/},{name:"Windows 2000",regex:/(Windows NT 5.0|Windows 2000)/},{name:"Windows XP",regex:/(Windows NT 5.1|Windows XP)/},{name:"Windows Server 2003",regex:/Windows NT 5.2/},{name:"Windows Vista",regex:/Windows NT 6.0/},{name:"Windows 7",regex:/(Windows 7|Windows NT 6.1)/},{name:"Windows 8.1",regex:/(Windows 8.1|Windows NT 6.3)/},{name:"Windows 8",regex:/(Windows 8|Windows NT 6.2)/},{name:"Windows NT 4.0",regex:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{name:"Windows ME",regex:/Windows ME/},{name:"Android",regex:/Android/},{name:"Open BSD",regex:/OpenBSD/},{name:"Sun OS",regex:/SunOS/},{name:"Linux",regex:/(Linux|X11)/},{name:"iOS",regex:/(iPhone|iPad|iPod)/},{name:"Mac OS X",regex:/Mac OS X/},{name:"Mac OS",regex:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{name:"QNX",regex:/QNX/},{name:"UNIX",regex:/UNIX/},{name:"BeOS",regex:/BeOS/},{name:"OS/2",regex:/OS\/2/}]){this.operatingSystems=e}get(){const e=window.navigator.userAgent;if(!e)return null;for(const o in this.operatingSystems){const n=this.operatingSystems[o];if(n.regex.test(e))return n.name}return null}}class c{get(){const e=window.screen;return e?{colorDepth:e.colorDepth,height:e.height,width:e.width}:null}}class p{constructor(e=new d,o=new g,n=new m,u=new c){this.browserNameRepository=e,this.deviceTypeRepository=o,this.operatingSystemRepository=n,this.screenRepository=u}getBrowserName(){return this.browserNameRepository.get()}getDeviceType(){return this.deviceTypeRepository.get()}getOperatingSystem(){return this.operatingSystemRepository.get()}getScreenInformation(){return this.screenRepository.get()}}class w{addItem(e,o){window.localStorage.setItem(e,o)}getItem(e){return window.localStorage.getItem(e)}isItemExist(e){const o=this.getItem(e);return!!(o!=null&&o.length)}removeItem(e){window.localStorage.removeItem(e)}clearAll(){window.localStorage.clear()}}class l{constructor(){a(this,"storageRepository");this.storageRepository=new w}addItem(e,o){this.storageRepository.addItem(e,o)}getItem(e){return this.storageRepository.getItem(e)}isItemExist(e){return this.storageRepository.isItemExist(e)}updateItem(e,o){this.storageRepository.addItem(e,o)}removeItem(e){this.storageRepository.removeItem(e)}}t.MSAppController=s,t.MSBrowserEnv=p,t.MSStorage=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=index.umd.cjs.map
