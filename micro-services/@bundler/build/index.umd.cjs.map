{"version":3,"file":"index.umd.cjs","sources":["../../src/ms-app-config/src/domain/domains/config.domain.ts","../../src/ms-error-handler/src/domain/domains/error-handler.domain.ts","../../src/ms-app-config/src/domain/domains/builder.domain.ts","../../src/ms-app-controller/src/data/repositories/app-controller.repository.ts","../../src/ms-app-controller/src/domain/domains/app-controller.domain.ts","../../src/ms-browser-env/src/data/repositories/browser-name.repository.ts","../../src/ms-browser-env/src/data/repositories/device-type.repository.ts","../../src/ms-browser-env/src/data/repositories/operating-system.repository.ts","../../src/ms-browser-env/src/data/repositories/screen.repository.ts","../../src/ms-browser-env/src/domain/services/browser-env.service.ts","../../src/ms-date/src/data/repositories/strategies/date.strategy.ts","../../src/ms-date/src/data/repositories/calendar.repository.ts","../../src/ms-date/src/data/repositories/date.repository.ts","../../src/ms-date/src/data/repositories/time.repository.ts","../../src/ms-date/src/data/repositories/month.repository.ts","../../src/ms-date/src/data/repositories/year.repository.ts","../../src/ms-date/src/domain/domains/date.domain.ts","../../src/ms-date/src/index.ts","../../../core/toolkit/src/utils/singleton-factory/singleton-factory.util.ts","../../src/ms-event-bus/src/domain/domains/event-bus.domain.ts","../../src/ms-file-manager/src/domain/domains/file-manager.domain.ts","../../src/ms-file-manager/src/index.ts","../../src/ms-language/src/domain/models/attribute.model.ts","../../src/ms-language/src/domain/domains/strategies/attribute.strategy.ts","../../src/ms-language/src/domain/domains/strategies/class.strategy.ts","../../src/ms-language/src/domain/domains/language.domain.ts","../../src/ms-storage/src/data/repositories/local-storage.repository.ts","../../src/ms-storage/src/data/repositories/session-storage.repository.ts","../../src/ms-storage/src/domain/domains/storage.domain.ts","../../src/ms-storage/src/domain/domains/local-storage.domain.ts","../../src/ms-storage/src/domain/domains/session-storage.domain.ts","../../src/ms-theme/src/domain/models/attribute.model.ts","../../src/ms-theme/src/domain/domains/strategies/attribute.strategy.ts","../../src/ms-theme/src/domain/domains/strategies/class.strategy.ts","../../src/ms-theme/src/domain/domains/theme.domain.ts"],"sourcesContent":["import type { AppConfigDomainContract } from \"../contracts\"\n\nexport class AppConfigDomain<Config>\n\timplements AppConfigDomainContract<Config>\n{\n\t// biome-ignore lint/suspicious/noExplicitAny: any is used to store the instance of the class\n\tprivate static instance: AppConfigDomain<any> | undefined = undefined\n\tprivate static lock = false\n\treadonly config: Config\n\n\tprivate constructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic static getInstance<Config>(config: Config): AppConfigDomain<Config> {\n\t\twhile (AppConfigDomain.lock) {\n\t\t\t/* Busy-wait until the lock is released */\n\t\t}\n\n\t\tAppConfigDomain.lock = true\n\n\t\tif (!AppConfigDomain.instance) {\n\t\t\tAppConfigDomain.instance = new AppConfigDomain(config)\n\t\t}\n\n\t\tAppConfigDomain.lock = false\n\n\t\treturn AppConfigDomain.instance\n\t}\n\n\tpublic set<Key extends keyof Config>(key: Key, value: Config[Key]): void {\n\t\tif (this.config[key] === value) return\n\n\t\tthis.config[key] = value\n\t}\n\n\tpublic get<Key extends keyof Config>(key: Key): Config[Key] {\n\t\treturn this.config[key]\n\t}\n}\n","import type { IError } from \"../../models\"\nimport type { ErrorHandlerDomainContract } from \"../contracts\"\n\nexport class ErrorHandlerDomain implements ErrorHandlerDomainContract {\n\tprivate readonly UNKNOWN_ERROR_MESSAGE = \"Unknown error message\"\n\n\tpublic CatchError(moduleName: string, methodName: string) {\n\t\tconst instance = this\n\n\t\treturn (\n\t\t\t_target: object,\n\t\t\t_propertyKey: string,\n\t\t\tdescriptor: PropertyDescriptor,\n\t\t): void => {\n\t\t\tconst originalMethod = descriptor.value\n\n\t\t\tdescriptor.value = function (...args: unknown[]) {\n\t\t\t\ttry {\n\t\t\t\t\treturn originalMethod.apply(this, args)\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconst customError = instance.createError(\n\t\t\t\t\t\tmoduleName,\n\t\t\t\t\t\tmethodName,\n\t\t\t\t\t\terror,\n\t\t\t\t\t)\n\n\t\t\t\t\tthrow customError\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate createError(\n\t\tmoduleName: string,\n\t\tmethodName: string,\n\t\terror: Error | unknown,\n\t): IError {\n\t\tconst errorMessage = this.generateErrorMessage(error)\n\n\t\tconst newError = new Error(errorMessage)\n\t\tnewError.name = `[${moduleName}]<${methodName}>`\n\n\t\treturn newError\n\t}\n\n\tprivate generateErrorMessage(error: Error | unknown): string {\n\t\treturn error instanceof Error && error.message.length\n\t\t\t? error.message\n\t\t\t: this.UNKNOWN_ERROR_MESSAGE\n\t}\n}\n\nconst errorHandlerInstance = new ErrorHandlerDomain()\n\nexport const MSErrorHandler = {\n\tCatchError: errorHandlerInstance.CatchError.bind(errorHandlerInstance),\n}\n","import { MSErrorHandler } from \"../../../../ms-error-handler/src\"\nimport type { AppConfigBuilderDomainContract } from \"../contracts\"\n\nexport class AppConfigBuilderDomain<Config>\n\timplements AppConfigBuilderDomainContract<Config>\n{\n\tprivate config: Config\n\n\tconstructor(config: Config) {\n\t\tthis.config = config\n\t}\n\n\tpublic add<Key extends keyof Config>(key: Key, value: Config[Key]): this {\n\t\tthis.config[key] = value\n\n\t\treturn this\n\t}\n\n\tpublic build(): Config {\n\t\tthis.validateConfig()\n\n\t\treturn this.config\n\t}\n\n\t@MSErrorHandler.CatchError(\"AppConfigBuilderDomain\", \"validateConfig\")\n\tprivate validateConfig(): void {\n\t\tif (this.config === undefined) throw new Error(\"missing config\")\n\n\t\tfor (const [key, value] of Object.entries(\n\t\t\tthis.config as Record<string, unknown>,\n\t\t)) {\n\t\t\tif (value === undefined) throw new Error(`missing ${key}`)\n\t\t}\n\t}\n}\n","import type { AppControllerRepositoryContract } from \"../../domain/contracts\"\n\nexport class AppControllerRepository\n\timplements AppControllerRepositoryContract\n{\n\trestartApplication(): void {\n\t\twindow.location.reload()\n\t}\n\n\tshutdownApplication(): void {\n\t\twindow.location.href = \"https://google.com\"\n\t}\n}\n","import { AppControllerRepository } from \"../../data/repositories\"\nimport type {\n\tAppControllerDomainContract,\n\tAppControllerRepositoryContract,\n} from \"../contracts\"\n\nexport class AppControllerDomain implements AppControllerDomainContract {\n\tprivate appControllerRepository: AppControllerRepositoryContract\n\n\tconstructor() {\n\t\tthis.appControllerRepository = new AppControllerRepository()\n\t}\n\n\trestartApplication(): void {\n\t\tthis.appControllerRepository.restartApplication()\n\t}\n\n\tshutdownApplication(): void {\n\t\tthis.appControllerRepository.shutdownApplication()\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIBrowserNameRegex,\n\tTBrowserName,\n} from \"../../domain/models/browser.model\"\n\nexport default class BrowserNameRepository\n\timplements BrowserEnvRepositoryContract<TBrowserName>\n{\n\tconstructor(\n\t\tprivate readonly browserNames: Array<IBrowserNameRegex> = [\n\t\t\t{ name: \"Chrome\", regex: /chrome|chromium|crios/i },\n\t\t\t{ name: \"Firefox\", regex: /firefox|fxios/i },\n\t\t\t{ name: \"Safari\", regex: /safari/i },\n\t\t\t{ name: \"Opera\", regex: /opr\\//i },\n\t\t\t{ name: \"Edge\", regex: /edg/i },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.browserNames) {\n\t\t\tconst system = this.browserNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IDevicesRegex, TDevices } from \"../../domain/models/device.model\"\n\nexport default class DeviceTypeRepository\n\timplements BrowserEnvRepositoryContract<TDevices>\n{\n\tconstructor(\n\t\tprivate readonly devicesNames: Array<IDevicesRegex> = [\n\t\t\t{\n\t\t\t\tname: \"mobile\",\n\t\t\t\tregex: /iphone|ipad|ipod|android|blackberry|opera mini|iemobile/i,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"desktop\",\n\t\t\t\tregex: /Win|Windows|OpenBSD|SunOS|Linux|X11|Mac|Mac OS X/i,\n\t\t\t},\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.devicesNames) {\n\t\t\tconst system = this.devicesNames[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type {\n\tIOperatingSystemRegex,\n\tTOperatingSystemAll,\n} from \"../../domain/models/operating.model\"\n\nexport default class OperatingSystemRepository\n\timplements BrowserEnvRepositoryContract<TOperatingSystemAll>\n{\n\tconstructor(\n\t\tprivate readonly operatingSystems: Array<IOperatingSystemRegex> = [\n\t\t\t{ name: \"Windows 3.11\", regex: /Win16/ },\n\t\t\t{ name: \"Windows 95\", regex: /(Windows 95|Win95|Windows_95)/ },\n\t\t\t{ name: \"Windows ME\", regex: /(Win 9x 4.90|Windows ME)/ },\n\t\t\t{ name: \"Windows 98\", regex: /(Windows 98|Win98)/ },\n\t\t\t{ name: \"Windows CE\", regex: /Windows CE/ },\n\t\t\t{ name: \"Windows 2000\", regex: /(Windows NT 5.0|Windows 2000)/ },\n\t\t\t{ name: \"Windows XP\", regex: /(Windows NT 5.1|Windows XP)/ },\n\t\t\t{ name: \"Windows Server 2003\", regex: /Windows NT 5.2/ },\n\t\t\t{ name: \"Windows Vista\", regex: /Windows NT 6.0/ },\n\t\t\t{ name: \"Windows 7\", regex: /(Windows 7|Windows NT 6.1)/ },\n\t\t\t{ name: \"Windows 8.1\", regex: /(Windows 8.1|Windows NT 6.3)/ },\n\t\t\t{ name: \"Windows 8\", regex: /(Windows 8|Windows NT 6.2)/ },\n\t\t\t{\n\t\t\t\tname: \"Windows NT 4.0\",\n\t\t\t\tregex: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/,\n\t\t\t},\n\t\t\t{ name: \"Windows ME\", regex: /Windows ME/ },\n\t\t\t{ name: \"Android\", regex: /Android/ },\n\t\t\t{ name: \"Open BSD\", regex: /OpenBSD/ },\n\t\t\t{ name: \"Sun OS\", regex: /SunOS/ },\n\t\t\t{ name: \"Linux\", regex: /(Linux|X11)/ },\n\t\t\t{ name: \"iOS\", regex: /(iPhone|iPad|iPod)/ },\n\t\t\t{ name: \"Mac OS X\", regex: /Mac OS X/ },\n\t\t\t{ name: \"Mac OS\", regex: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/ },\n\t\t\t{ name: \"QNX\", regex: /QNX/ },\n\t\t\t{ name: \"UNIX\", regex: /UNIX/ },\n\t\t\t{ name: \"BeOS\", regex: /BeOS/ },\n\t\t\t{ name: \"OS/2\", regex: /OS\\/2/ },\n\t\t],\n\t) {}\n\n\tpublic get() {\n\t\tconst userAgent = window.navigator.userAgent\n\n\t\tif (!userAgent) return null\n\n\t\tfor (const id in this.operatingSystems) {\n\t\t\tconst system = this.operatingSystems[id]\n\n\t\t\tif (system.regex.test(userAgent)) {\n\t\t\t\treturn system.name\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n}\n","import type BrowserEnvRepositoryContract from \"../../domain/contracts/repository.contract\"\nimport type { IScreenInformation } from \"../../domain/models/screen.model\"\n\nexport default class ScreenRepository\n\timplements BrowserEnvRepositoryContract<IScreenInformation>\n{\n\tpublic get() {\n\t\tconst windowScreen = window.screen\n\n\t\tif (!windowScreen) return null\n\n\t\treturn {\n\t\t\tcolorDepth: windowScreen.colorDepth,\n\t\t\theight: windowScreen.height,\n\t\t\twidth: windowScreen.width,\n\t\t}\n\t}\n}\n","import BrowserNameRepository from \"../../data/repositories/browser-name.repository\"\nimport DeviceTypeRepository from \"../../data/repositories/device-type.repository\"\nimport OperatingSystemRepository from \"../../data/repositories/operating-system.repository\"\nimport ScreenRepository from \"../../data/repositories/screen.repository\"\nimport type BrowserEnvServiceContract from \"../contracts/service.contract\"\n\nexport default class BrowserEnvService implements BrowserEnvServiceContract {\n\tconstructor(\n\t\tprivate readonly browserNameRepository = new BrowserNameRepository(),\n\t\tprivate readonly deviceTypeRepository = new DeviceTypeRepository(),\n\t\tprivate readonly operatingSystemRepository = new OperatingSystemRepository(),\n\t\tprivate readonly screenRepository = new ScreenRepository(),\n\t) {}\n\n\tpublic getBrowserName() {\n\t\treturn this.browserNameRepository.get()\n\t}\n\n\tpublic getDeviceType() {\n\t\treturn this.deviceTypeRepository.get()\n\t}\n\n\tpublic getOperatingSystem() {\n\t\treturn this.operatingSystemRepository.get()\n\t}\n\n\tpublic getScreenInformation() {\n\t\treturn this.screenRepository.get()\n\t}\n}\n","import { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { DateStrategyContract } from \"../../../domain/contracts\"\n\nexport class DateStrategy implements DateStrategyContract {\n\t@MSErrorHandler.CatchError(\"DateStrategy\", \"createDate\")\n\tpublic createDate(value?: string): Date {\n\t\tif (value && !this.isValidDate(value)) {\n\t\t\tthrow new Error(`Invalid date string: ${value}`)\n\t\t}\n\n\t\treturn value ? new Date(value) : new Date()\n\t}\n\n\tprivate isValidDate(value: string): boolean {\n\t\treturn !Number.isNaN(Date.parse(value))\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { CalendarRepositoryContract } from \"../../domain/contracts\"\nimport type { EDay, EMonth, ICalendar } from \"../../domain/models\"\nimport { DateStrategy } from \"./strategies\"\n\nexport class CalendarRepository implements CalendarRepositoryContract {\n\tconstructor(private readonly dateStrategy = new DateStrategy()) {}\n\n\tpublic get(month: EMonth, year: number): ICalendar {\n\t\tconst activeDay = this.getActiveDay(month, year)\n\t\tconst daysInMonth = this.getDaysInMonth(month, year)\n\t\tconst firstDayOfWeek = this.getFirstDayOfWeek(month, year)\n\n\t\treturn {\n\t\t\tactiveDay,\n\t\t\tdaysInMonth,\n\t\t\tfirstDayOfWeek,\n\t\t}\n\t}\n\n\tprivate getActiveDay(month: EMonth, year: number): Maybe<number> {\n\t\tconst currentDate = this.dateStrategy.createDate()\n\t\tconst currentYear = currentDate.getFullYear()\n\t\tconst currentMonth = currentDate.getMonth()\n\n\t\tif (currentYear === year && currentMonth === month) {\n\t\t\treturn currentDate.getDate()\n\t\t}\n\n\t\treturn null\n\t}\n\n\tprivate getDaysInMonth(month: EMonth, year: number): number {\n\t\tconst date = this.dateStrategy.createDate()\n\t\tdate.setFullYear(year, month + 1, 0)\n\n\t\treturn date.getDate()\n\t}\n\n\tprivate getFirstDayOfWeek(month: EMonth, year: number): EDay {\n\t\tconst date = this.dateStrategy.createDate()\n\t\tdate.setFullYear(year, month, 1)\n\n\t\treturn date.getDay()\n\t}\n}\n","import type { DateRepositoryContract } from \"../../domain/contracts\"\nimport type {\n\tEDay,\n\tIFormatOptions,\n\tTLocalesArgument,\n} from \"../../domain/models\"\nimport { DateStrategy } from \"./strategies\"\n\nexport class DateRepository implements DateRepositoryContract {\n\tconstructor(private readonly dateStrategy = new DateStrategy()) {}\n\n\tpublic getDate(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getDate()\n\t}\n\n\tpublic getDay(value?: string): EDay {\n\t\treturn this.dateStrategy.createDate(value).getDay()\n\t}\n\n\tpublic toLocaleString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateStrategy.createDate(value).toLocaleString(locales, options)\n\t}\n\n\tpublic toLocaleDateString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateStrategy\n\t\t\t.createDate(value)\n\t\t\t.toLocaleDateString(locales, options)\n\t}\n}\n","import type { TimeRepositoryContract } from \"../../domain/contracts\"\nimport type { IFormatOptions, TLocalesArgument } from \"../../domain/models\"\nimport { DateStrategy } from \"./strategies\"\n\nexport class TimeRepository implements TimeRepositoryContract {\n\tconstructor(private readonly dateStrategy = new DateStrategy()) {}\n\n\tpublic getHours(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getHours()\n\t}\n\n\tpublic getMilliseconds(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getMilliseconds()\n\t}\n\n\tpublic getMinutes(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getMinutes()\n\t}\n\n\tpublic getSeconds(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getSeconds()\n\t}\n\n\tpublic toLocaleTimeString(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateStrategy\n\t\t\t.createDate(value)\n\t\t\t.toLocaleTimeString(locales, options)\n\t}\n}\n","import type { MonthRepositoryContract } from \"../../domain/contracts\"\nimport type { EMonth } from \"../../domain/models\"\nimport { DateStrategy } from \"./strategies\"\n\nexport class MonthRepository implements MonthRepositoryContract {\n\tconstructor(private readonly dateStrategy = new DateStrategy()) {}\n\n\tpublic get(value?: string): EMonth {\n\t\treturn this.dateStrategy.createDate(value).getMonth()\n\t}\n}\n","import type { YearRepositoryContract } from \"../../domain/contracts\"\nimport { DateStrategy } from \"./strategies\"\n\nexport class YearRepository implements YearRepositoryContract {\n\tconstructor(private readonly dateStrategy = new DateStrategy()) {}\n\n\tpublic get(value?: string): number {\n\t\treturn this.dateStrategy.createDate(value).getFullYear()\n\t}\n}\n","import {\n\tCalendarRepository,\n\tDateRepository,\n\tTimeRepository,\n} from \"../../data/repositories\"\nimport { MonthRepository } from \"../../data/repositories/month.repository\"\nimport { YearRepository } from \"../../data/repositories/year.repository\"\nimport type { DateDomainContract } from \"../contracts\"\nimport type {\n\tEMonth,\n\tICalendar,\n\tIFormatOptions,\n\tTLocalesArgument,\n} from \"../models\"\n\nexport class DateDomain implements DateDomainContract {\n\tconstructor(\n\t\tprivate readonly calendarRepository = new CalendarRepository(),\n\t\tprivate readonly dateRepository = new DateRepository(),\n\t\tprivate readonly monthRepository = new MonthRepository(),\n\t\tprivate readonly timeRepository = new TimeRepository(),\n\t\tprivate readonly yearRepository = new YearRepository(),\n\t) {}\n\n\tpublic getCalendar(month: EMonth, year: number): ICalendar {\n\t\treturn this.calendarRepository.get(month, year)\n\t}\n\n\tpublic getDate(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateRepository.toLocaleDateString(value, locales, options)\n\t}\n\n\tpublic getDateWithTime(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.dateRepository.toLocaleString(value, locales, options)\n\t}\n\n\tpublic getMonth(value?: string): EMonth {\n\t\treturn this.monthRepository.get(value)\n\t}\n\n\tpublic getTime(\n\t\tvalue?: string,\n\t\tlocales?: TLocalesArgument,\n\t\toptions?: IFormatOptions,\n\t): string {\n\t\treturn this.timeRepository.toLocaleTimeString(value, locales, options)\n\t}\n\n\tpublic getYear(value?: string): number {\n\t\treturn this.yearRepository.get(value)\n\t}\n}\n","import { DateDomain } from \"../src/domain/domains\"\n\nexport const MSDate = new DateDomain()\n","import type { Constructor } from \"./singleton-factory.types\"\n\n// biome-ignore lint/complexity/noStaticOnlyClass: this is a utility class singleton\nexport class SingletonFactory {\n\t// biome-ignore lint/suspicious/noExplicitAny: accept any arguments\n\tprivate static instances: Map<Constructor<any>, any> = new Map()\n\n\tpublic static getInstance<T>(\n\t\tclassConstructor: Constructor<T>,\n\t\t...args: unknown[]\n\t): T {\n\t\tlet instance = SingletonFactory.instances.get(classConstructor)\n\n\t\tif (!instance) {\n\t\t\tinstance = new classConstructor(...args)\n\t\t\tSingletonFactory.instances.set(classConstructor, instance)\n\t\t}\n\n\t\treturn instance\n\t}\n}\n","import { SingletonFactory } from \"@windows98/toolkit\"\nimport type { EventBusDomainContract } from \"../contracts\"\nimport type { EventBusSubscriber, Events } from \"../models\"\n\nclass EventBusDomain implements EventBusDomainContract {\n\tprivate events: Events = {}\n\n\tpublic emit<Data, EventName extends string>(\n\t\tevent: EventName,\n\t\tdata?: Data,\n\t): void {\n\t\tif (!this.events[event]) return\n\n\t\tfor (const listener of this.events[event]) {\n\t\t\tlistener(data)\n\t\t}\n\t}\n\n\tpublic off<Data, EventName extends string>(\n\t\tevent: EventName,\n\t\tlistenerToRemove?: EventBusSubscriber<Data>,\n\t): void {\n\t\tif (!this.events[event]) return\n\n\t\tthis.events[event] = this.events[event].filter(\n\t\t\t(listener) => listener !== listenerToRemove,\n\t\t)\n\t}\n\n\tpublic on<Data, EventName extends string>(\n\t\tevent: EventName,\n\t\tlistener: EventBusSubscriber<Data>,\n\t): void {\n\t\tif (!this.events[event]) {\n\t\t\tthis.events[event] = []\n\t\t}\n\n\t\tthis.events[event].push(listener)\n\t}\n\n\tpublic once<Data, EventName extends string>(\n\t\tevent: EventName,\n\t\tlistener: EventBusSubscriber<Data>,\n\t): void {\n\t\tconst wrapper: EventBusSubscriber<Data> = (data?: Data) => {\n\t\t\tlistener(data)\n\t\t\tthis.off(event, wrapper)\n\t\t}\n\n\t\tthis.on(event, wrapper)\n\t}\n}\n\nexport const MSEventBus = SingletonFactory.getInstance(EventBusDomain)\n","import type { FileManagerDomainContract } from \"../contracts\"\nimport type { EFileTextTypes } from \"../models\"\n\nexport class FileManagerDomain implements FileManagerDomainContract {\n\tpublic async openFile(): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst input = document.createElement(\"input\")\n\t\t\tinput.type = \"file\"\n\n\t\t\tinput.onchange = async (event: Event) => {\n\t\t\t\tconst target = event.target as HTMLInputElement\n\t\t\t\tif (!target.files || target.files.length === 0) {\n\t\t\t\t\treject(new Error(\"No file selected\"))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst file = target.files[0]\n\t\t\t\tconst contents = await file.text()\n\t\t\t\tresolve(contents)\n\t\t\t}\n\n\t\t\tinput.click()\n\t\t})\n\t}\n\n\tpublic async saveFile(\n\t\tcontent: string,\n\t\tfilename: string,\n\t\ttype: EFileTextTypes,\n\t): Promise<void> {\n\t\tconst blob = new Blob([content], { type })\n\t\tconst link = document.createElement(\"a\")\n\t\tlink.href = URL.createObjectURL(blob)\n\t\tlink.download = filename\n\n\t\tdocument.body.appendChild(link)\n\t\tlink.click()\n\t\tdocument.body.removeChild(link)\n\t}\n}\n","import { FileManagerDomain } from \"./domain/domains\"\n\nexport const MSFileManager = new FileManagerDomain()\n","export enum EAttributes {\n\tLANGUAGE = \"lang\",\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { LanguageStrategyContract } from \"../../contracts\"\nimport { EAttributes } from \"../../models\"\n\nexport class AttributeLanguageStrategy<ELanguages>\n\timplements LanguageStrategyContract<ELanguages>\n{\n\t@MSErrorHandler.CatchError(\"AttributeLanguageStrategy\", \"applyLanguage\")\n\tpublic applyLanguage(language: ELanguages): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\n\t\tif (element) {\n\t\t\telement.setAttribute(EAttributes.LANGUAGE, language as string)\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { LanguageStrategyContract } from \"../../contracts\"\n\nexport class ClassLanguageStrategy<ELanguages>\n\timplements LanguageStrategyContract<ELanguages>\n{\n\t@MSErrorHandler.CatchError(\"ClassLanguageStrategy\", \"applyLanguage\")\n\tpublic applyLanguage(language: ELanguages): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\t\tconst languageClassName: string = `language-${language}`\n\n\t\tif (element) {\n\t\t\telement.className = languageClassName\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type {\n\tLanguageDomainContract,\n\tLanguageStrategyContract,\n} from \"../contracts\"\nimport { AttributeLanguageStrategy } from \"./strategies\"\n\nclass LanguageDomain<ELanguages> implements LanguageDomainContract<ELanguages> {\n\tprivate languageStrategy: LanguageStrategyContract<ELanguages>\n\n\tconstructor(languageStrategy: LanguageStrategyContract<ELanguages>) {\n\t\tthis.languageStrategy = languageStrategy\n\t}\n\n\tpublic updateLanguage(language: ELanguages): void {\n\t\tthis.languageStrategy.applyLanguage(language)\n\t}\n}\n\nexport class MSLanguage<ELanguages> extends LanguageDomain<ELanguages> {\n\tconstructor() {\n\t\tsuper(new AttributeLanguageStrategy<ELanguages>())\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { StorageRepositoryStrategyContract } from \"../../domain/contracts\"\n\nexport class LocalStorageRepository<StorageKeys>\n\timplements StorageRepositoryStrategyContract<StorageKeys>\n{\n\tpublic getItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t): Maybe<StorageKeys[Key]> {\n\t\treturn window.localStorage.getItem(key as string) as StorageKeys[Key]\n\t}\n\n\tpublic setItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\twindow.localStorage.setItem(key as string, value as string)\n\t}\n\n\tpublic removeItem<Key extends keyof StorageKeys>(key: Key): void {\n\t\twindow.localStorage.removeItem(key as string)\n\t}\n\n\tpublic clear(): void {\n\t\twindow.localStorage.clear()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type { StorageRepositoryStrategyContract } from \"../../domain/contracts\"\n\nexport class SessionStorageRepository<StorageKeys>\n\timplements StorageRepositoryStrategyContract<StorageKeys>\n{\n\tpublic getItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t): Maybe<StorageKeys[Key]> {\n\t\treturn window.sessionStorage.getItem(key as string) as StorageKeys[Key]\n\t}\n\n\tpublic setItem<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\twindow.sessionStorage.setItem(key as string, value as string)\n\t}\n\n\tpublic removeItem<Key extends keyof StorageKeys>(key: Key): void {\n\t\twindow.sessionStorage.removeItem(key as string)\n\t}\n\n\tpublic clear(): void {\n\t\twindow.sessionStorage.clear()\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport type {\n\tStorageDomainContract,\n\tStorageRepositoryStrategyContract,\n} from \"../contracts\"\n\nexport class StorageDomain<StorageKeys>\n\timplements StorageDomainContract<StorageKeys>\n{\n\tprivate storageRepository: StorageRepositoryStrategyContract<StorageKeys>\n\n\tconstructor(\n\t\tstorageRepository: StorageRepositoryStrategyContract<StorageKeys>,\n\t) {\n\t\tthis.storageRepository = storageRepository\n\t}\n\n\tpublic set<Key extends keyof StorageKeys>(\n\t\tkey: Key,\n\t\tvalue: StorageKeys[Key],\n\t): void {\n\t\tthis.storageRepository.setItem(key, value)\n\t}\n\n\tpublic get<Key extends keyof StorageKeys>(key: Key): Maybe<StorageKeys[Key]> {\n\t\treturn this.storageRepository.getItem(key) as Maybe<StorageKeys[Key]>\n\t}\n\n\tpublic exists<Key extends keyof StorageKeys>(key: Key): boolean {\n\t\tconst item = this.get(key)\n\n\t\treturn !!item?.toString().length\n\t}\n\n\tpublic remove<Key extends keyof StorageKeys>(key: Key): void {\n\t\tthis.storageRepository.removeItem(key)\n\t}\n}\n","import { LocalStorageRepository } from \"../../data/repositories\"\nimport { StorageDomain } from \"./storage.domain\"\n\nexport class MSLocalStorage<StorageKeys> extends StorageDomain<StorageKeys> {\n\tconstructor() {\n\t\tsuper(new LocalStorageRepository<StorageKeys>())\n\t}\n}\n","import { SessionStorageRepository } from \"../../data/repositories\"\nimport { StorageDomain } from \"./storage.domain\"\n\nexport class MSSessionStorage<StorageKeys> extends StorageDomain<StorageKeys> {\n\tconstructor() {\n\t\tsuper(new SessionStorageRepository<StorageKeys>())\n\t}\n}\n","export enum EAttributes {\n\tTHEME = \"theme\",\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { ThemeStrategyContract } from \"../../contracts\"\nimport { EAttributes } from \"../../models\"\n\nexport class AttributeThemeStrategy<EThemes>\n\timplements ThemeStrategyContract<EThemes>\n{\n\t@MSErrorHandler.CatchError(\"AttributeThemeStrategy\", \"applyTheme\")\n\tpublic applyTheme(theme: EThemes): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\n\t\tif (element) {\n\t\t\telement.setAttribute(EAttributes.THEME, theme as string)\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { Maybe } from \"@windows98/toolkit\"\nimport { MSErrorHandler } from \"../../../../../ms-error-handler/src\"\nimport type { ThemeStrategyContract } from \"../../contracts\"\n\nexport class ClassThemeStrategy<EThemes>\n\timplements ThemeStrategyContract<EThemes>\n{\n\t@MSErrorHandler.CatchError(\"ClassThemeStrategy\", \"applyTheme\")\n\tpublic applyTheme(theme: EThemes): void {\n\t\tconst element: Maybe<HTMLHtmlElement> =\n\t\t\twindow.document.querySelector(\"html\")\n\t\tconst themeClassName: string = `theme-${theme}`\n\n\t\tif (element) {\n\t\t\telement.className = themeClassName\n\t\t} else {\n\t\t\tthrow new Error(\"Element HTML not found\")\n\t\t}\n\t}\n}\n","import type { ThemeDomainContract, ThemeStrategyContract } from \"../contracts\"\nimport { AttributeThemeStrategy } from \"./strategies\"\n\nclass ThemeDomain<EThemes> implements ThemeDomainContract<EThemes> {\n\tprivate themeStrategy: ThemeStrategyContract<EThemes>\n\n\tconstructor(themeStrategy: ThemeStrategyContract<EThemes>) {\n\t\tthis.themeStrategy = themeStrategy\n\t}\n\n\tpublic updateTheme(theme: EThemes): void {\n\t\tthis.themeStrategy.applyTheme(theme)\n\t}\n}\n\nexport class MSTheme<EThemes> extends ThemeDomain<EThemes> {\n\tconstructor() {\n\t\tsuper(new AttributeThemeStrategy<EThemes>())\n\t}\n}\n"],"names":["_AppConfigDomain","config","__publicField","key","value","AppConfigDomain","ErrorHandlerDomain","moduleName","methodName","instance","_target","_propertyKey","descriptor","originalMethod","args","error","errorMessage","newError","errorHandlerInstance","MSErrorHandler","AppConfigBuilderDomain","__decorateClass","AppControllerRepository","AppControllerDomain","BrowserNameRepository","browserNames","userAgent","id","system","DeviceTypeRepository","devicesNames","OperatingSystemRepository","operatingSystems","ScreenRepository","windowScreen","BrowserEnvService","browserNameRepository","deviceTypeRepository","operatingSystemRepository","screenRepository","DateStrategy","CalendarRepository","dateStrategy","month","year","activeDay","daysInMonth","firstDayOfWeek","currentDate","currentYear","currentMonth","date","DateRepository","locales","options","TimeRepository","MonthRepository","YearRepository","DateDomain","calendarRepository","dateRepository","monthRepository","timeRepository","yearRepository","MSDate","_SingletonFactory","classConstructor","SingletonFactory","EventBusDomain","event","data","listener","listenerToRemove","wrapper","MSEventBus","FileManagerDomain","resolve","reject","input","target","contents","content","filename","type","blob","link","MSFileManager","EAttributes","AttributeLanguageStrategy","language","element","ClassLanguageStrategy","languageClassName","LanguageDomain","languageStrategy","MSLanguage","LocalStorageRepository","SessionStorageRepository","StorageDomain","storageRepository","item","MSLocalStorage","MSSessionStorage","AttributeThemeStrategy","theme","ClassThemeStrategy","themeClassName","ThemeDomain","themeStrategy","MSTheme"],"mappings":"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"}